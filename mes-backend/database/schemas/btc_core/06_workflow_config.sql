-- ==============================================
-- BTC核心数据库 - 工作流和环境配置表
-- ==============================================

USE btc_core;

-- 工厂管理表
CREATE TABLE plant (
    plant_id VARCHAR(32) PRIMARY KEY COMMENT '工厂ID',
    tenant_id VARCHAR(32) NOT NULL COMMENT '租户ID',
    site_id VARCHAR(32) NOT NULL COMMENT '站点ID',
    plant_code VARCHAR(64) NOT NULL COMMENT '工厂代码',
    plant_name VARCHAR(128) NOT NULL COMMENT '工厂名称',
    plant_type ENUM('MANUFACTURING', 'ASSEMBLY', 'WAREHOUSE', 'LABORATORY') DEFAULT 'MANUFACTURING' COMMENT '工厂类型',
    status ENUM('ACTIVE', 'INACTIVE', 'MAINTENANCE') DEFAULT 'ACTIVE' COMMENT '状态',
    address TEXT COMMENT '地址',
    timezone VARCHAR(32) DEFAULT 'Asia/Shanghai' COMMENT '时区',
    currency VARCHAR(8) DEFAULT 'CNY' COMMENT '货币',
    language VARCHAR(8) DEFAULT 'zh-CN' COMMENT '语言',
    contact_person VARCHAR(64) COMMENT '联系人',
    contact_phone VARCHAR(32) COMMENT '联系电话',
    contact_email VARCHAR(128) COMMENT '联系邮箱',
    description TEXT COMMENT '描述',
    settings JSON COMMENT '工厂配置',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tenant_site (tenant_id, site_id),
    INDEX idx_plant_code (plant_code),
    INDEX idx_plant_name (plant_name),
    INDEX idx_status (status),
    FOREIGN KEY (tenant_id) REFERENCES tenant(tenant_id),
    FOREIGN KEY (site_id) REFERENCES site(site_id)
) COMMENT '工厂管理表';

-- 产线管理表
CREATE TABLE production_line (
    line_id VARCHAR(32) PRIMARY KEY COMMENT '产线ID',
    tenant_id VARCHAR(32) NOT NULL COMMENT '租户ID',
    site_id VARCHAR(32) NOT NULL COMMENT '站点ID',
    plant_id VARCHAR(32) NOT NULL COMMENT '工厂ID',
    line_code VARCHAR(64) NOT NULL COMMENT '产线代码',
    line_name VARCHAR(128) NOT NULL COMMENT '产线名称',
    line_type ENUM('ASSEMBLY', 'MANUFACTURING', 'PACKAGING', 'TESTING') DEFAULT 'ASSEMBLY' COMMENT '产线类型',
    status ENUM('ACTIVE', 'INACTIVE', 'MAINTENANCE', 'SHUTDOWN') DEFAULT 'ACTIVE' COMMENT '状态',
    capacity_per_hour DECIMAL(10,2) DEFAULT 0 COMMENT '每小时产能',
    cycle_time DECIMAL(8,2) DEFAULT 0 COMMENT '节拍时间(秒)',
    efficiency_target DECIMAL(5,2) DEFAULT 85.00 COMMENT '效率目标(%)',
    quality_target DECIMAL(5,2) DEFAULT 99.00 COMMENT '质量目标(%)',
    location VARCHAR(255) COMMENT '位置',
    description TEXT COMMENT '描述',
    settings JSON COMMENT '产线配置',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tenant_site (tenant_id, site_id),
    INDEX idx_plant (plant_id),
    INDEX idx_line_code (line_code),
    INDEX idx_line_name (line_name),
    INDEX idx_status (status),
    FOREIGN KEY (tenant_id) REFERENCES tenant(tenant_id),
    FOREIGN KEY (site_id) REFERENCES site(site_id),
    FOREIGN KEY (plant_id) REFERENCES plant(plant_id)
) COMMENT '产线管理表';

-- 工位管理表
CREATE TABLE workstation (
    station_id VARCHAR(32) PRIMARY KEY COMMENT '工位ID',
    tenant_id VARCHAR(32) NOT NULL COMMENT '租户ID',
    site_id VARCHAR(32) NOT NULL COMMENT '站点ID',
    plant_id VARCHAR(32) NOT NULL COMMENT '工厂ID',
    line_id VARCHAR(32) NOT NULL COMMENT '产线ID',
    station_code VARCHAR(64) NOT NULL COMMENT '工位代码',
    station_name VARCHAR(128) NOT NULL COMMENT '工位名称',
    station_type ENUM('ASSEMBLY', 'TESTING', 'INSPECTION', 'PACKAGING', 'STORAGE') DEFAULT 'ASSEMBLY' COMMENT '工位类型',
    status ENUM('ACTIVE', 'INACTIVE', 'MAINTENANCE', 'BREAKDOWN') DEFAULT 'ACTIVE' COMMENT '状态',
    station_order INT DEFAULT 1 COMMENT '工位顺序',
    capacity_per_hour DECIMAL(10,2) DEFAULT 0 COMMENT '每小时产能',
    cycle_time DECIMAL(8,2) DEFAULT 0 COMMENT '节拍时间(秒)',
    setup_time DECIMAL(8,2) DEFAULT 0 COMMENT '换型时间(分钟)',
    location VARCHAR(255) COMMENT '位置',
    description TEXT COMMENT '描述',
    settings JSON COMMENT '工位配置',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tenant_site (tenant_id, site_id),
    INDEX idx_plant (plant_id),
    INDEX idx_line (line_id),
    INDEX idx_station_code (station_code),
    INDEX idx_station_name (station_name),
    INDEX idx_status (status),
    INDEX idx_station_order (station_order),
    FOREIGN KEY (tenant_id) REFERENCES tenant(tenant_id),
    FOREIGN KEY (site_id) REFERENCES site(site_id),
    FOREIGN KEY (plant_id) REFERENCES plant(plant_id),
    FOREIGN KEY (line_id) REFERENCES production_line(line_id)
) COMMENT '工位管理表';

-- 设备管理表
CREATE TABLE equipment (
    equipment_id VARCHAR(32) PRIMARY KEY COMMENT '设备ID',
    tenant_id VARCHAR(32) NOT NULL COMMENT '租户ID',
    site_id VARCHAR(32) NOT NULL COMMENT '站点ID',
    plant_id VARCHAR(32) NOT NULL COMMENT '工厂ID',
    line_id VARCHAR(32) COMMENT '产线ID',
    station_id VARCHAR(32) COMMENT '工位ID',
    equipment_code VARCHAR(64) NOT NULL COMMENT '设备代码',
    equipment_name VARCHAR(128) NOT NULL COMMENT '设备名称',
    equipment_type ENUM('MACHINE', 'TOOL', 'INSTRUMENT', 'VEHICLE', 'COMPUTER', 'OTHER') DEFAULT 'MACHINE' COMMENT '设备类型',
    equipment_category VARCHAR(64) COMMENT '设备分类',
    manufacturer VARCHAR(128) COMMENT '制造商',
    model VARCHAR(128) COMMENT '型号',
    serial_number VARCHAR(128) COMMENT '序列号',
    status ENUM('ACTIVE', 'INACTIVE', 'MAINTENANCE', 'BREAKDOWN', 'RETIRED') DEFAULT 'ACTIVE' COMMENT '状态',
    purchase_date DATE COMMENT '采购日期',
    installation_date DATE COMMENT '安装日期',
    warranty_expire_date DATE COMMENT '保修过期日期',
    location VARCHAR(255) COMMENT '位置',
    description TEXT COMMENT '描述',
    specifications JSON COMMENT '技术规格',
    settings JSON COMMENT '设备配置',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tenant_site (tenant_id, site_id),
    INDEX idx_plant (plant_id),
    INDEX idx_line (line_id),
    INDEX idx_station (station_id),
    INDEX idx_equipment_code (equipment_code),
    INDEX idx_equipment_name (equipment_name),
    INDEX idx_equipment_type (equipment_type),
    INDEX idx_status (status),
    FOREIGN KEY (tenant_id) REFERENCES tenant(tenant_id),
    FOREIGN KEY (site_id) REFERENCES site(site_id),
    FOREIGN KEY (plant_id) REFERENCES plant(plant_id),
    FOREIGN KEY (line_id) REFERENCES production_line(line_id),
    FOREIGN KEY (station_id) REFERENCES workstation(station_id)
) COMMENT '设备管理表';

-- 传感器管理表
CREATE TABLE sensor (
    sensor_id VARCHAR(32) PRIMARY KEY COMMENT '传感器ID',
    tenant_id VARCHAR(32) NOT NULL COMMENT '租户ID',
    site_id VARCHAR(32) NOT NULL COMMENT '站点ID',
    equipment_id VARCHAR(32) COMMENT '设备ID',
    sensor_code VARCHAR(64) NOT NULL COMMENT '传感器代码',
    sensor_name VARCHAR(128) NOT NULL COMMENT '传感器名称',
    sensor_type ENUM('TEMPERATURE', 'PRESSURE', 'VIBRATION', 'CURRENT', 'VOLTAGE', 'SPEED', 'POSITION', 'OTHER') DEFAULT 'OTHER' COMMENT '传感器类型',
    unit VARCHAR(16) COMMENT '单位',
    min_value DECIMAL(18,4) COMMENT '最小值',
    max_value DECIMAL(18,4) COMMENT '最大值',
    normal_min DECIMAL(18,4) COMMENT '正常范围最小值',
    normal_max DECIMAL(18,4) COMMENT '正常范围最大值',
    warning_min DECIMAL(18,4) COMMENT '警告范围最小值',
    warning_max DECIMAL(18,4) COMMENT '警告范围最大值',
    alarm_min DECIMAL(18,4) COMMENT '报警范围最小值',
    alarm_max DECIMAL(18,4) COMMENT '报警范围最大值',
    sampling_rate INT DEFAULT 1000 COMMENT '采样频率(Hz)',
    accuracy DECIMAL(8,4) COMMENT '精度',
    status ENUM('ACTIVE', 'INACTIVE', 'MAINTENANCE', 'FAULT') DEFAULT 'ACTIVE' COMMENT '状态',
    location VARCHAR(255) COMMENT '位置',
    description TEXT COMMENT '描述',
    calibration_date DATE COMMENT '校准日期',
    calibration_due_date DATE COMMENT '下次校准日期',
    settings JSON COMMENT '传感器配置',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tenant_site (tenant_id, site_id),
    INDEX idx_equipment (equipment_id),
    INDEX idx_sensor_code (sensor_code),
    INDEX idx_sensor_name (sensor_name),
    INDEX idx_sensor_type (sensor_type),
    INDEX idx_status (status),
    FOREIGN KEY (tenant_id) REFERENCES tenant(tenant_id),
    FOREIGN KEY (site_id) REFERENCES site(site_id),
    FOREIGN KEY (equipment_id) REFERENCES equipment(equipment_id)
) COMMENT '传感器管理表';

-- MES主流程定义表
CREATE TABLE mes_main_workflow (
    workflow_id VARCHAR(32) PRIMARY KEY COMMENT '主流程ID',
    workflow_code VARCHAR(64) NOT NULL UNIQUE COMMENT '主流程代码',
    workflow_name VARCHAR(128) NOT NULL COMMENT '主流程名称',
    workflow_order INT DEFAULT 1 COMMENT '流程顺序',
    description TEXT COMMENT '流程描述',
    workflow_config JSON COMMENT '流程配置',
    status ENUM('ACTIVE', 'INACTIVE', 'DRAFT') DEFAULT 'ACTIVE' COMMENT '状态',
    version VARCHAR(16) DEFAULT '1.0' COMMENT '版本',
    is_active TINYINT(1) DEFAULT 1 COMMENT '是否启用',
    tenant_id VARCHAR(32) COMMENT '租户ID',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_workflow_code (workflow_code),
    INDEX idx_workflow_order (workflow_order),
    INDEX idx_status (status),
    INDEX idx_tenant (tenant_id)
) COMMENT 'MES主流程定义表';

-- MES子流程定义表
CREATE TABLE mes_sub_workflow (
    sub_workflow_id VARCHAR(32) PRIMARY KEY COMMENT '子流程ID',
    main_workflow_id VARCHAR(32) NOT NULL COMMENT '主流程ID',
    sub_workflow_code VARCHAR(64) NOT NULL COMMENT '子流程代码',
    sub_workflow_name VARCHAR(128) NOT NULL COMMENT '子流程名称',
    sub_workflow_order INT DEFAULT 1 COMMENT '子流程顺序',
    description TEXT COMMENT '流程描述',
    sub_workflow_config JSON COMMENT '子流程配置',
    status ENUM('ACTIVE', 'INACTIVE', 'DRAFT') DEFAULT 'ACTIVE' COMMENT '状态',
    version VARCHAR(16) DEFAULT '1.0' COMMENT '版本',
    is_active TINYINT(1) DEFAULT 1 COMMENT '是否启用',
    tenant_id VARCHAR(32) COMMENT '租户ID',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_main_workflow (main_workflow_id),
    INDEX idx_sub_workflow_code (sub_workflow_code),
    INDEX idx_sub_workflow_order (sub_workflow_order),
    INDEX idx_status (status),
    INDEX idx_tenant (tenant_id),
    FOREIGN KEY (main_workflow_id) REFERENCES mes_main_workflow(workflow_id)
) COMMENT 'MES子流程定义表';

-- MES工作流节点定义表
CREATE TABLE mes_workflow_node (
    node_id VARCHAR(32) PRIMARY KEY COMMENT '节点ID',
    workflow_id VARCHAR(32) COMMENT '工作流ID',
    sub_workflow_id VARCHAR(32) COMMENT '子工作流ID',
    node_code VARCHAR(64) NOT NULL COMMENT '节点代码',
    node_name VARCHAR(128) NOT NULL COMMENT '节点名称',
    node_type ENUM('START', 'END', 'TASK', 'DECISION', 'PARALLEL', 'SUB_WORKFLOW', 'MANUAL', 'AUTO') DEFAULT 'TASK' COMMENT '节点类型',
    node_order INT DEFAULT 1 COMMENT '节点顺序',
    description TEXT COMMENT '节点描述',
    processor_key VARCHAR(255) COMMENT '对应后端处理器',
    configuration JSON COMMENT '节点配置（如审批人、条件表达式）',
    timeout_minutes INT COMMENT '超时时间(分钟)',
    retry_count INT DEFAULT 0 COMMENT '重试次数',
    status ENUM('ACTIVE', 'INACTIVE', 'DRAFT') DEFAULT 'ACTIVE' COMMENT '状态',
    version VARCHAR(16) DEFAULT '1.0' COMMENT '版本',
    is_active TINYINT(1) DEFAULT 1 COMMENT '是否启用',
    tenant_id VARCHAR(32) COMMENT '租户ID',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_workflow (workflow_id),
    INDEX idx_sub_workflow (sub_workflow_id),
    INDEX idx_node_code (node_code),
    INDEX idx_node_order (node_order),
    INDEX idx_node_type (node_type),
    INDEX idx_status (status),
    INDEX idx_tenant (tenant_id),
    FOREIGN KEY (workflow_id) REFERENCES mes_main_workflow(workflow_id),
    FOREIGN KEY (sub_workflow_id) REFERENCES mes_sub_workflow(sub_workflow_id)
) COMMENT 'MES工作流节点定义表';

-- MES节点连接关系表
CREATE TABLE mes_node_connection (
    connection_id VARCHAR(32) PRIMARY KEY COMMENT '连接ID',
    workflow_id VARCHAR(32) NOT NULL COMMENT '工作流ID',
    sub_workflow_id VARCHAR(32) COMMENT '子工作流ID',
    source_node_id VARCHAR(32) NOT NULL COMMENT '源节点ID',
    target_node_id VARCHAR(32) NOT NULL COMMENT '目标节点ID',
    connection_name VARCHAR(128) COMMENT '连接名称',
    condition_expression TEXT COMMENT '连接条件表达式',
    priority INT DEFAULT 0 COMMENT '优先级',
    connection_config JSON COMMENT '连接配置',
    status ENUM('ACTIVE', 'INACTIVE') DEFAULT 'ACTIVE' COMMENT '状态',
    tenant_id VARCHAR(32) COMMENT '租户ID',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_workflow (workflow_id),
    INDEX idx_sub_workflow (sub_workflow_id),
    INDEX idx_source_node (source_node_id),
    INDEX idx_target_node (target_node_id),
    INDEX idx_status (status),
    INDEX idx_tenant (tenant_id),
    FOREIGN KEY (workflow_id) REFERENCES mes_main_workflow(workflow_id),
    FOREIGN KEY (sub_workflow_id) REFERENCES mes_sub_workflow(sub_workflow_id),
    FOREIGN KEY (source_node_id) REFERENCES mes_workflow_node(node_id),
    FOREIGN KEY (target_node_id) REFERENCES mes_workflow_node(node_id)
) COMMENT 'MES节点连接关系表';

-- 动态实体表
CREATE TABLE dynamic_entity (
    entity_id VARCHAR(40) PRIMARY KEY COMMENT '实体ID',
    entity_type VARCHAR(64) NOT NULL COMMENT '实体类型',
    entity_name VARCHAR(128) NOT NULL COMMENT '实体名称',
    entity_code VARCHAR(64) NOT NULL COMMENT '实体代码',
    description TEXT COMMENT '实体描述',
    schema_version VARCHAR(16) DEFAULT '1.0' COMMENT 'Schema版本',
    status ENUM('ACTIVE', 'INACTIVE', 'DRAFT') DEFAULT 'ACTIVE' COMMENT '状态',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_entity_type (entity_type),
    INDEX idx_entity_code (entity_code),
    INDEX idx_status (status)
) COMMENT '动态实体表';

-- 动态属性表
CREATE TABLE dynamic_attribute (
    attribute_id VARCHAR(40) PRIMARY KEY COMMENT '属性ID',
    entity_id VARCHAR(40) NOT NULL COMMENT '实体ID',
    attribute_name VARCHAR(64) NOT NULL COMMENT '属性名称',
    attribute_code VARCHAR(64) NOT NULL COMMENT '属性代码',
    attribute_type ENUM('STRING', 'INTEGER', 'DECIMAL', 'BOOLEAN', 'DATE', 'DATETIME', 'TEXT', 'JSON', 'FILE') NOT NULL COMMENT '属性类型',
    data_type VARCHAR(32) COMMENT '数据类型',
    length INT COMMENT '长度',
    precision INT COMMENT '精度',
    scale INT COMMENT '小数位',
    nullable BOOLEAN DEFAULT TRUE COMMENT '是否可空',
    default_value TEXT COMMENT '默认值',
    validation_rules JSON COMMENT '验证规则',
    display_order INT DEFAULT 0 COMMENT '显示顺序',
    is_searchable BOOLEAN DEFAULT FALSE COMMENT '是否可搜索',
    is_required BOOLEAN DEFAULT FALSE COMMENT '是否必填',
    description TEXT COMMENT '属性描述',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_entity (entity_id),
    INDEX idx_attribute_code (attribute_code),
    INDEX idx_attribute_name (attribute_name),
    UNIQUE KEY uk_entity_attribute (entity_id, attribute_code),
    FOREIGN KEY (entity_id) REFERENCES dynamic_entity(entity_id)
) COMMENT '动态属性表';

-- 动态属性值表
CREATE TABLE dynamic_attribute_value (
    value_id VARCHAR(40) PRIMARY KEY COMMENT '值ID',
    entity_id VARCHAR(40) NOT NULL COMMENT '实体ID',
    attribute_id VARCHAR(40) NOT NULL COMMENT '属性ID',
    record_id VARCHAR(64) NOT NULL COMMENT '记录ID',
    attribute_value TEXT COMMENT '属性值',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_entity (entity_id),
    INDEX idx_attribute (attribute_id),
    INDEX idx_record (record_id),
    UNIQUE KEY uk_entity_attribute_record (entity_id, attribute_id, record_id),
    FOREIGN KEY (entity_id) REFERENCES dynamic_entity(entity_id),
    FOREIGN KEY (attribute_id) REFERENCES dynamic_attribute(attribute_id)
) COMMENT '动态属性值表';

-- 通用事件类型定义表（元数据驱动）
CREATE TABLE trace_event_type (
    event_type_id VARCHAR(32) PRIMARY KEY COMMENT '事件类型ID',
    event_type_code VARCHAR(64) NOT NULL UNIQUE COMMENT '事件类型代码',
    category VARCHAR(32) NOT NULL COMMENT '事件类别',
    event_name VARCHAR(128) NOT NULL COMMENT '事件名称',
    description TEXT COMMENT '事件描述',
    schema_definition JSON NOT NULL COMMENT '动态Schema定义',
    business_rules JSON COMMENT '业务规则配置',
    status ENUM('ACTIVE', 'INACTIVE') DEFAULT 'ACTIVE' COMMENT '状态',
    created_by VARCHAR(64) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(64),
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_event_type_code (event_type_code),
    INDEX idx_category (category),
    INDEX idx_status (status)
) COMMENT '通用事件类型定义表';

-- 通用事件记录表（支持任意业务事件）
CREATE TABLE universal_trace_event (
    event_id VARCHAR(40) PRIMARY KEY COMMENT '事件ID',
    event_type_id VARCHAR(32) NOT NULL COMMENT '事件类型ID',
    entity_type VARCHAR(32) NOT NULL COMMENT '实体类型',
    entity_id VARCHAR(64) NOT NULL COMMENT '实体ID',
    event_data JSON NOT NULL COMMENT '动态数据存储',
    event_time DATETIME NOT NULL COMMENT '事件时间',
    source_system VARCHAR(64) COMMENT '来源系统',
    source_user VARCHAR(64) COMMENT '操作用户',
    correlation_id VARCHAR(64) COMMENT '关联ID',
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_event_type (event_type_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_event_time (event_time),
    INDEX idx_source_system (source_system),
    INDEX idx_correlation_id (correlation_id),
    FOREIGN KEY (event_type_id) REFERENCES trace_event_type(event_type_id)
) COMMENT '通用事件记录表';
